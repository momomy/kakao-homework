plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
    id 'war'
}

group = 'me.kakaopay'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile("junit:junit:4.12")

    implementation 'commons-net:commons-net:3.6'
    implementation 'commons-io:commons-io:2.5'
    implementation 'com.google.guava:guava:27.1-jre'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.commons:commons-pool2'

    implementation 'org.hibernate:hibernate-core:5.4.22.Final'
    implementation 'com.querydsl:querydsl-jpa'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
}

sourceSets {
    generated {
        java {
            srcDirs = ["src/generated/java"]
        }
    }

    main {
        java {
            srcDirs = ["src/main/java", "src/generated/java"]
        }
    }

    test {
        java {
            srcDirs = ["src/test/java", "src/integration-test/java"]
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
    }
}

querydsl {
    jpa = true
    querydslSourcesDir = sourceSets.generated.java.srcDirs.iterator().next()
}

configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

project.afterEvaluate {
    project.tasks.compileQuerydsl.options.compilerArgs = [
            "-proc:only",
            "-processor", project.querydsl.processors() + ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
    ]
}

clean.doLast {
    file(new File("src", "/generated")).deleteDir()
}

test {
    useJUnitPlatform()
}
